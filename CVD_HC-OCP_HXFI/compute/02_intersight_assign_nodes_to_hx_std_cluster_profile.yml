---

- name: Define anchor for Intersight API login info 
  set_fact:
    intersight_api_login_info: &intersight_api_login_info
      api_private_key:    "{{ intersight_api_private_key }}"
      api_key_id:         "{{ intersight_api_key_id }}"
      api_uri:            "{{ intersight_api_uri | default(omit) }}"
      validate_certs: "{{ intersight_validate_certs | default(omit) }}"
      #state:          "{{ intersight_state | default(omit) }}"

# - debug:
#     msg: "API Info is: {{ intersight_api_login_info }}"

# Get server Moids
- name: Get server Moid
  cisco.intersight.intersight_info:
    <<: *intersight_api_login_info
    server_names:
      - "{{ item }}"
  loop: "{{ hx_std_servers }}"
  register: inventory


# Assign servers and profile to node profile
- name: "Configure Node Profile"
  intersight_rest_api:
    <<: *intersight_api_login_info
    resource_path: /hyperflex/NodeProfiles
    query_params:
      $filter: "Name eq '{{ hx_node_profile_prefix }}-{{ '%02d' % (idx + 1) }}'"
    api_body: {
      "Name":               "{{ hx_node_profile_prefix }}-{{ '%02d' % (idx + 1) }}",
      "AssignedServer": {
        "Moid":             "{{ item.intersight_servers[0].Moid }}",
        "ObjectType":       "compute.RackUnit"
      },
      "ClusterProfile": {
        "Moid":             "{{ hx_cluster_profile_moid  }}"
      }
    }
    state: present
  when: item.intersight_servers is not none
  loop: "{{ inventory.results }}"
  loop_control:
    index_var: idx
    label: "{{ item.intersight_servers[0].Name }}"

- debug: msg="Successfully assigned HyperFlex nodes to cluster profile and created node profiles"

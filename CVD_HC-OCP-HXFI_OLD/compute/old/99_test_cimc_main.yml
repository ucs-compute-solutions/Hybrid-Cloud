---

#-------------------------------------------------------------------------------------
# Login to UCSM and collect device claim info (for use by Intersight)
#-------------------------------------------------------------------------------------
# - name: API Login to UCSM 
#   hosts: "{{ group | default('cisco_hx_fi') }}"
#   connection: local
#   gather_facts: false
#   vars:
#   vars_files:
#     - "../inventory/group_vars/cisco_hx_fi/vars"
#     - "../inventory/group_vars/cisco_hx_fi/vault"
#   tasks:
#     - name: Login into UCSM
#       include_tasks: 10_ucsm_api_login.yml
#       #tags: [never, debug, always, ucsm_login]
#     - name: Login into UCSM
#       include_tasks: 11_ucsm_get_device_connector_status.yml
#       #tags: [never, debug, always, ucsm_get_device_connector_status]


# tasks file for cimc_intersight_connector

- name: Login to CIMC
  hosts: "{{ group | default('cisco_hx_fi') }}"
  connection: local
  tasks:
    - name: Login to UCSM
      uri:
        url: "https://{{ inventory_hostname }}/nuova"
        method: POST
        headers: 
          Content-Type: application/x-www-form-urlencoded
        body: <aaaLogin inName='admin' inPassword='H1ghV0lt'></aaaLogin>
        body_format: form-urlencoded
        status_code: 200
        return_content: yes
        validate_certs: no
      register: response

    - name: PRINT PRINT PRINT
      debug:
       msg: "{{ response.content }}"
      tags: never

    - name: Get cookie from xml response
      xml:
        xmlstring: "{{ response.content }}"
        content: "attribute"
        xpath: /aaaLogin
      register: xmlattribute

    #- name: Show an attribute value
    #  debug:
    #    var: xmlattribute.matches[0].aaaLogin.outCookie

    - name: Set cookie var
      set_fact:
        cookie_fact: "{{ xmlattribute.matches[0].aaaLogin.outCookie | string }}"

    #- name: check variable data type
    #  debug:
    #    msg: "{{ cookie_fact | type_debug }}"


    - name: Enable Device Connector
      uri:
        url: "https://{{ inventory_hostname }}/connector/Systems"
        method: PUT
        headers:
          Content-Type: application/json
          ucsmcookie: "ucsm-cookie={{ cookie_fact }}"
        body: "{\"AdminState\": true}"
        status_code: 200
        return_content: yes
        validate_certs: no

    # - name: Pause for Device Connector to enable
    #   pause:
    #     seconds: 30

    - name: Get Device Identifier
      uri:
        url: "https://{{ inventory_hostname }}/connector/DeviceIdentifiers"
        method: GET
        headers:
          Accept: "application/json"
          Content-Type: application/json
          ucsmcookie: "ucsm-cookie={{ cookie_fact }}"
        status_code: 200
        return_content: yes
        validate_certs: no
      register: response
    - name: Print URI response
      debug:
        #msg: "{{ response }}"
        #msg: "{{ response | type_debug }}"
        msg: "{{ response.content }}"
      #tags: [always, debug, never]

    - name: Print returned json dictionary
      debug:
        var: response.json
      tags: [never, debug, always]

    - name: Set device id var
      set_fact:
        #device_id_fact: "{{ response.content | from_json }}"
        device_id_fact: "{{ response.content }}"

    - name: Show an attribute value
      debug:
        msg: "{{ device_id_fact[0]['Id']  }}"
      tags: [never, debug, always]

    # - name: Set device id var
    #   set_fact:
    #     device_id_fact: "{{ response.json[0].Id }}"

    - name: Get Device Security Token
      uri:
        url: "https://{{ inventory_hostname }}/connector/SecurityTokens"
        method: GET
        headers:
          Content-Type: application/json
          ucsmcookie: "ucsm-cookie={{ cookie_fact }}"
        status_code: 200
        return_content: yes
        validate_certs: no
      register: response

    - name: Show an attribute value
      debug:
        msg: "{{ response.json[0].Token  }}"

    - name: Set device id var
      set_fact:
        device_token_fact: "{{ response.json[0].Token }}"

    - name: Create InterSight API Body Payload
      set_fact:
        api_body_payload: "{{ api_body_payload | default({})  | combine({item.key: item.value}) }}"
      with_items:
        - { key: "SerialNumber", value: "{{ device_id_fact }}" }
        - { key: "SecurityToken", value: "{{ device_token_fact }}" }

    #- name: Show api body payload
    #  debug:
    #    msg: "{{ api_body_payload }}"

    - name: Claim device
      intersight_rest_api:
        api_private_key: "./roles/cimc_intersight_connector/files/SecretKey.txt"
        api_key_id: "5a8c6ae66e66676d31c255a2/5a8c69406e66676d31c23e9b/5e8a86a27564612d30a7decb"
        api_uri: "https://intersight.com/api/v1"
        resource_path: "/asset/DeviceClaims"
        api_body: "{{ api_body_payload }}"
        update_method: post
        state: present
        use_proxy: no
        validate_certs: no
   


---
- name: Play_Claim UCSM Managed hosts in Intersight
  hosts: "{{ group | default('HX_FI') }}"
  connection: local
  gather_facts: false
  tasks:
    #- include_tasks: ../intersight-python-utils/config_targets/HC_claim.yml
    - include_tasks: HC_ClaimDevice_Task.yml
      vars:
      # override on command line if needed
        target_hostname: "{{ inventory_hostname }}"
        target_username: "{{ username | default('admin') }}"
        target_password: "{{ password }}"
        platform_type: "{{ device_type | default('ucs') }}"
        target_proxy_host: "{{ proxy_host | default('') }}"
        target_proxy_port: "{{ proxy_port | default(0) }}"
        target_read_only: "{{ read_only | default(false) }}"
        target_resource_groups: "{{ resource_groups | default(omit) }}"

    #- tags: Ansible_Intersight

- name: Play_Setup HCI via Intersight
  hosts: all
  connection: local
  gather_facts: false


# ---
# #
# # The hosts group used is provided by the group variable or defaulted to 'Intersight_Servers'.
# # You can specify a specific host (or host group) on the command line:
# #   ansible-playbook ... -e group=<your host group>
# #   e.g., ansible-playbook server_profiles.yml -e group=TME_Demo
# #
# - hosts: "{{ group | default('Intersight_Servers') }}"
#   connection: local
#   gather_facts: false
#   vars:
#     # Create an anchor for api_info that can be used throughout the file
#     api_info: &api_info
#       api_private_key: "{{ api_private_key }}"
#       api_key_id: "{{ api_key_id }}"
#       api_uri: "{{ api_uri | default(omit) }}"
#       validate_certs: "{{ validate_certs | default(omit) }}"
#       state: "{{ state | default(omit) }}"
#   tasks:
#     # Claim device
#     - name: Claim device
#       cisco.intersight.intersight_rest_api:
#         <<: *api_info
#         resource_path: /asset/DeviceClaims
#         api_body: {
#           "SecurityToken": "{{ SecurityToken }}",
#           "SerialNumber": "{{ SerialNumber }}"
#         }
#         update_method: post
#       delegate_to: localhost
#       run_once: true